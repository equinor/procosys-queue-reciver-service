# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master
      - dev
      - pipelines

variables:
  System.Debug: 'true'
  vmImageName: 'ubuntu-latest'
  buildConfiguration: 'Release'

stages:
  
- stage: "Build"
  jobs:
  - job:
    pool:
      vmImage: $(vmImageName)

    steps:
    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'dotnet build $(buildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test $(buildConfiguration)'
      inputs:
        command: test
        projects: '**/*[Tt]ests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
    
- stage: "Deploy Nuget Package"
  jobs:
  - deployment:
    pool:
      vmImage: $(vmImageName)
    environment: pcs-queue-receiver
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DotNetCoreCLI@2
            displayName: 'Create NuGet Package - Release Version'
            inputs:
              command: pack
              packagesToPack:  '**/*Worker/*.csproj'
              packDirectory: '$(Build.ArtifactStagingDirectory)/packages/releases'
              arguments: '--configuration $(buildConfiguration)'
              nobuild: true
              
          - task: DotNetCoreCLI@2
            displayName: 'Create NuGet Package - Prerelease Version'
            inputs:
              command: pack
              packagesToPack:  '**/*Worker/*.csproj'
              packDirectory: '$(Build.ArtifactStagingDirectory)/packages/prereleases'
              buildProperties: 'VersionSuffix="$(Build.BuildNumber)"'
              arguments: '--configuration $(buildConfiguration)'

          - task: NuGetAuthenticate@0
            displayName: 'NuGet Authenticate'

          - task: DotNetCoreCLI@2
            displayName: 'NuGet push prerelease'
            inputs:
              command: push
              feedsToUse: 'select'
              packagesToPush: '$(Build.ArtifactStagingDirectory)/packages/prereleases/*.nupkg'
              publishVstsFeed: 'ProCoSysOfficial'
              allowPackageConflicts: true