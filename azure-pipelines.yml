# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master
      - dev
      - pipelines

stages:
  
- stage: "Build"
  variables:
    System.Debug: 'true'
    vmImageName: 'ubuntu-latest'
    buildConfiguration: 'Release'
  jobs:
  - job:
    pool:
      vmImage: $(vmImageName)

    steps:
    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'dotnet build $(buildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: 'dotnet test $(buildConfiguration)'
      inputs:
        command: test
        projects: '**/*[Tt]ests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: 'Create NuGet Package - Release Version'
      inputs:
        command: pack
        packDirectory: '$(Build.ArtifactStagingDirectory)/packages/releases'
        arguments: '--configuration $(buildConfiguration)'
        nobuild: true
        
    - task: DotNetCoreCLI@2
      displayName: 'Create NuGet Package - Prerelease Version'
      inputs:
        command: pack
        buildProperties: 'VersionSuffix="$(Build.BuildNumber)"'
        packDirectory: '$(Build.ArtifactStagingDirectory)/packages/prereleases'
        arguments: '--configuration $(buildConfiguration)'
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/packages'
        artifactName: 'packages'
  
- stage: 'PublishPrereleaseNuGetPackage'
  displayName: 'Publish Prerelease NuGet Package'
  dependsOn: 'Build'
  condition: succeeded()
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'
    
    steps:
    - checkout: none

    - download: current
      artifact: 'packages'

    - task: NuGetAuthenticate@0
      displayName: 'NuGet Authenticate'
  
    - task: DotNetCoreCLI@2
      displayName: 'NuGet push'
      inputs:
        command: push
        packagesToPush: '$(Pipeline.Workspace)/packages/prereleases/*.nupkg'
        publishVstsFeed: 'https://pkgs.dev.azure.com/statoildeveloper/_packaging/ProCoSysOfficial/nuget/v3/index.json'
        allowPackageConflicts: true